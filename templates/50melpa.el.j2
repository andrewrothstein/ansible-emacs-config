(require 'package)

{% for n, u in emacs_pkg_archives.iteritems() %}
(add-to-list 'package-archives '({{n|to_json}} . {{u|to_json}}))
{% endfor %}

(package-initialize)

(setq url-http-attempt-keepalives nil)

(defvar prelude-packages
  '({{emacs_pkgs | default([]) | join(" ")}})
  "A list of packages to ensure are installed at launch.")

; see http://stackoverflow.com/questions/30847443/emacs-symbols-function-definition-is-void-loop
(require 'cl-lib)
(defun prelude-packages-installed-p ()
  (cl-every 'package-installed-p prelude-packages))

(unless (prelude-packages-installed-p)
  ;; check for new packages (package versions)
  (message "%s" "Emacs Prelude is now refreshing its package database...")
  (package-refresh-contents)
  (message "%s" " done.")
  ;; install the missing packages
  (dolist (p prelude-packages)
    (when (not (package-installed-p p))
      (package-install p))))

(provide 'prelude-packages)
